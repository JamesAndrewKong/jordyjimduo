version: '3.8'

services:
  messagebus:
    image: rabbitmq:latest
    container_name: messagebus
    ports:
      - '${BROKER_HTTP_PORT:-15672}:15672'
    restart: unless-stopped
    
  mydatabase:
    image: mongo:latest
    container_name: mydatabase
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME:-week4username}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD:-week4password}
    volumes:
      - mongo_data:/data/db
      # - ./data/db:/data/db
    networks:
      - week4network
    ports:
      - "27017:27017"

  myapi:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - '${APP_PORT:-8000}:3000'
    environment:
      # MONGO_URL: ${MONGO_URL}/${DB_NAME}
      JWT_SECRET: '${JWT_SECRET}'
      USER_SERVICE_URL: 'http://user-service:${USER_SERVICE_PORT:-3000}'
    volumes:
      - ./api:/app
    networks:
      - week4network
    container_name: myapi
    depends_on:
      - mydatabase
      - user-service

  user-service:
    image: node:20.11.1
    container_name: 'service-user'
    working_dir: /var/www/html
    volumes:
      - ./Services/UserService:/var/www/html
    networks:
      - week4network
    environment:
      APP_PORT: '${USER_SERVICE_PORT:-3000}'
      DB_URL: 'mongodb://mydatabase:27017/users'
      DB_USERNAME: '${DB_USERNAME:-week4username}'
      DB_PASSWORD: '${DB_PASSWORD:-week4password}'
    command: bash -c "npm install && npm run watch"
    # restart: unless-stopped
    depends_on:
      - messagebus
      - mydatabase
      
  target-service:
    image: node:20.11.1
    container_name: 'service-target'
    working_dir: /var/www/html
    volumes:
      - ./Services/TargetService:/var/www/html
    networks:
      - week4network
    environment:
      APP_PORT: '3001'
      DB_URL: 'mongodb://mydatabase:27017/targets'
      DB_USERNAME: '${DB_USERNAME:-week4username}'
      DB_PASSWORD: '${DB_PASSWORD:-week4password}'
    command: bash -c "npm install && npm run watch"
    depends_on:
      - messagebus
      - mydatabase



  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   environment:
  #     - API_URL=${API_URL}
  #   networks:
  #     - week4network
  #   container_name: frontend
    
  prometheus:
    build:
      context: ./prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    container_name: prometheus
    networks:
      - week4network

  mongodb-exporter:
    image: bitnami/mongodb-exporter:latest
    ports:
      - "9216:9216"
    environment:
      MONGODB_URI: 'mongodb://${DB_USERNAME:-week4username}:${DB_PASSWORD:-week4password}@mydatabase:27017'
    networks:
      - week4network
    container_name: mongodb-exporter
    depends_on:
      - mydatabase

# Define named volumes
volumes:
  mongo_data:

# Define custom network
networks:
  week4network:
    driver: bridge
